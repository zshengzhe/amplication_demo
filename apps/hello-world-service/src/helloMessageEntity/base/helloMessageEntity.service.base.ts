/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  HelloMessageEntity as PrismaHelloMessageEntity,
} from "@prisma/client";

export class HelloMessageEntityServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.HelloMessageEntityCountArgs, "select">
  ): Promise<number> {
    return this.prisma.helloMessageEntity.count(args);
  }

  async helloMessageEntities(
    args: Prisma.HelloMessageEntityFindManyArgs
  ): Promise<PrismaHelloMessageEntity[]> {
    return this.prisma.helloMessageEntity.findMany(args);
  }
  async helloMessageEntity(
    args: Prisma.HelloMessageEntityFindUniqueArgs
  ): Promise<PrismaHelloMessageEntity | null> {
    return this.prisma.helloMessageEntity.findUnique(args);
  }
  async createHelloMessageEntity(
    args: Prisma.HelloMessageEntityCreateArgs
  ): Promise<PrismaHelloMessageEntity> {
    return this.prisma.helloMessageEntity.create(args);
  }
  async updateHelloMessageEntity(
    args: Prisma.HelloMessageEntityUpdateArgs
  ): Promise<PrismaHelloMessageEntity> {
    return this.prisma.helloMessageEntity.update(args);
  }
  async deleteHelloMessageEntity(
    args: Prisma.HelloMessageEntityDeleteArgs
  ): Promise<PrismaHelloMessageEntity> {
    return this.prisma.helloMessageEntity.delete(args);
  }
}
